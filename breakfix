#!/bin/bash

BREAKDIR='./breaks'
COMPLETED_LABS=${BREAKDIR}/completed_labs
BREAKTASKFILE=
VIRTUAL_MACHINE_IP="127.0.0.1 -p 2222"
ARR_INDEX=0

get_ip_from_provider ()
{
  VIRTUAL_MACHINE_IP=$(basename .vagrant/machines/BF1/libvirt/logs/ssh-forwarding*.log  | awk -F- '{ print $4}' | cut -d_ -f1)
}

throw_informative_message ()
{
  [ -e ".vagrant/machines/BF1/libvirt" ] && get_ip_from_provider
  echo
  echo 'Breakfix operation complete!'
  echo
  echo "To access the BF1 VM: ssh root@${VIRTUAL_MACHINE_IP}"
  echo '(password: rpcr).'
  echo
  echo 'Your task is decribed on file /root/breakfix.txt'
  echo 'Hint files are in /root/hint*.txt'
  echo 'Answer to the exercise: /root/solution.txt '
  echo
  echo 'Good luck!'
  echo
}

clean_before_start ()
{
   [ -e sandbox_status ] && rm sandbox_status
}


choose_random_break_task_file ()
{
  ARR_INDEX=0
  for AVAILABLE_BREAK in $(ls ${BREAKDIR}/*yml)
  do
    BREAKFIXES[${ARR_INDEX}]=${AVAILABLE_BREAK}
    : $((ARR_INDEX++))
  done
  FILE_TO_CHOOSE=$((${RANDOM}%${ARR_INDEX}))
  BREAKTASKFILE=${BREAKFIXES[${FILE_TO_CHOOSE}]}
}

update_completed_labs ()
{
  echo "${BREAKTASKFILE}" >> ${COMPLETED_LABS}
}


first_time_vm ()
{
  rm -rf .vagrant
  vagrant up
  [ "${?}" == "0" ] && vagrant sandbox on
  [ "${?}" == "0" ] && vagrant sandbox commit
  return ${?}
}

rollback_vm ()
{
  vagrant sandbox rollback
  return ${?}
}


setup_exercise ()
{
  # If no breakfix was specified, select one at random
  if [[ -e "$1" ]] ; then
    BREAKTASKFILE="$1"
  else
    # Choose random file
    COMPLETED_BEFORE=1
    NO_MORE_LABS=0
    RANDOM_TRIES=0
    until [ "${COMPLETED_BEFORE}" == "0" ] || [ "${NO_MORE_LABS}" == "1" ]
    do
      choose_random_break_task_file
      if [ -e ${COMPLETED_LABS} ]
      then
        ! grep ${BREAKTASKFILE} ${COMPLETED_LABS} > /dev/null && \
        COMPLETED_BEFORE=0
      else
        COMPLETED_BEFORE=0
      fi
      : $((RANDOM_TRIES++))
      [ "${RANDOM_TRIES}" -gt "${ARR_INDEX}" ] && echo "You have completed all the exercises. Delete or edit ${COMPLETED_LABS} to try again" && NO_MORE_LABS=1 && return 0
    done
  fi
  echo Lab selected: ${BREAKTASKFILE}
  ansible-playbook -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory ${BREAKTASKFILE}
  status=${?}
  [ "${status}" == "0" ] && throw_informative_message
  return ${status}
}

# main section

export BREAKTASKFILE


vagrant sandbox status > sandbox_status 2>&1

if [ "${?}" == "1" ] || grep "Sandbox mode is off" sandbox_status > /dev/null
then
  first_time_vm
  status=${?}
else
  rollback_vm
  status=${?}
fi
[ "${status}" == "0" ] && setup_exercise ${1}
[ "${?}" == "0" ] && update_completed_labs
